version: "3.9"

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    image: yaungkyaml/app:latest
    restart: unless-stopped
    environment:
      APP_NAME: "YaungKyaML"
      APP_ENV: local
      APP_KEY: ${APP_KEY:-}
      APP_DEBUG: "true"
      APP_URL: http://localhost
      LOG_CHANNEL: stack
      LOG_LEVEL: debug
      DB_CONNECTION: mysql
      DB_HOST: mysql
      DB_PORT: 3306
      DB_DATABASE: ${DB_DATABASE}
      DB_USERNAME: ${DB_USERNAME}
      DB_PASSWORD: ${DB_PASSWORD}
      CACHE_DRIVER: file
      SESSION_DRIVER: file
      QUEUE_CONNECTION: database
      BROADCAST_DRIVER: log
      FILESYSTEM_DISK: ${FILESYSTEM_DISK:-local}
    volumes:
      - ./:/var/www/html:cached
      - vendor:/var/www/html/vendor
      - node_modules:/var/www/html/node_modules
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      - yaungkyaml

  queue:
    image: yaungkyaml/app:latest
    restart: unless-stopped
    working_dir: /var/www/html
    command: php artisan queue:work --verbose --tries=1 --timeout=90
    environment:
      APP_NAME: "YaungKyaML"
      APP_ENV: local
      APP_KEY: ${APP_KEY:-}
      APP_DEBUG: "true"
      APP_URL: http://localhost
      LOG_CHANNEL: stack
      LOG_LEVEL: debug
      DB_CONNECTION: mysql
      DB_PORT: 3306
      DB_HOST: mysql
      DB_DATABASE: ${DB_DATABASE}
      DB_USERNAME: ${DB_USERNAME}
      DB_PASSWORD: ${DB_PASSWORD}
      CACHE_DRIVER: file
      SESSION_DRIVER: file
      QUEUE_CONNECTION: database
      BROADCAST_DRIVER: log
      FILESYSTEM_DISK: ${FILESYSTEM_DISK:-local}
    volumes:
      - ./:/var/www/html:cached
      - vendor:/var/www/html/vendor
      - node_modules:/var/www/html/node_modules
    depends_on:
      app:
        condition: service_started
      mysql:
        condition: service_healthy
    networks:
      - yaungkyaml

  nginx:
    image: nginx:1.27-alpine
    restart: unless-stopped
    ports:
      - "8000:80"
    volumes:
      - ./:/var/www/html:cached
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      app:
        condition: service_started
    networks:
      - yaungkyaml

  mysql:
    image: mysql:8.0
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
      MYSQL_DATABASE: ${DB_DATABASE}
    volumes:
      - mysql-data:/var/lib/mysql
    ports:
      - "33060:3306"
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "127.0.0.1"]
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 30s
    networks:
      - yaungkyaml

volumes:
  vendor:
  node_modules:
  mysql-data:

networks:
  yaungkyaml:
    driver: bridge
